@model WallIT.Web.Models.UserViewModel
@{
    ViewBag.Title = "Crear Usuario";
    Layout = Request.IsAjaxRequest() || ViewContext.Controller.ControllerContext.IsChildAction ? "~/Views/Shared/_emptyLayout.cshtml" : "~/Views/Shared/_AdminMaster.cshtml";
    var entityName = "Usuario";
    var tab1Title = string.Format("Lista {0}", entityName);
    var tab2Title = string.Format("Nuevo/Editar {0}", entityName);
    List<WallIT.Web.Models.ItemSelectViewModel> allOffice = ViewBag.AllOffice;
}
@section AjaxJavascriptInclude{
    @Scripts.Render("~/bundles/jqueryval")
}
@section JavaScript{
    <script type="text/javascript">
        $(document).ready(function () {
            initPages('Users', '@entityName', '@tab1Title', '@tab2Title');

            $("#userForm").on("submit", function (e) {
                e.preventDefault();
                callCreate($(this));
            });
        });
    </script>
}
@section MainContent{
    <h2>@ViewBag.Title</h2>
    <form id="userForm" action="/Users/Create" method="POST" class="form-horizontal">
        <fieldset>
            <div id="errorPlaceHolder" class="alert alert-danger" role="alert" style="display: none;">
                @Html.ValidationSummary()
            </div>
            <div class="form-group">
                <div class="col-md-12">
                    @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control", placeholder = "Nombre" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-12">
                    @Html.TextBoxFor(model => model.LastName, new { @class = "form-control", placeholder = "Apellido" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-12">
                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control", placeholder = "Email" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-12">
                    @Html.PasswordFor(model => model.Password, new { @class = "form-control", placeholder = "Contraseña" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-12">
                    <select class="form-control selectpicker" name="IdOffice" id="IdOffice" data-live-search="true">
                        <option value="0">Seleccione Oficina</option>
                        @foreach (var office in allOffice)
                        {
                            <option value="@office.Id">@office.TextValue</option>
                        }
                    </select>
                    @Html.ValidationMessageFor(model => model.IdOffice, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-12">
                    <input type="checkbox" name="IsAdmin" id="IsAdmin"/> Es admin
                </div>
            </div>
            <div class="control-group">
                <div class="controls">
                    <button type="submit" id="btnSaveSubmit" class="btn btn-default">Guardar</button>
                    <input type="button" data-dismiss="modal" onclick="javascript: cancelPage();" value="Cancelar" class="btn btn-inverse" />
                </div>
            </div>
        </fieldset>
    </form>
}